.alert-dialog {
    &-overlay {
        position: fixed;
        inset: 0;
        z-index: 50;
        background-color: rgba(0, 0, 0, 0.8);

        &[data-state="open"],
        &[motion^="from-"],
        &[data-state="visible"] {
            animation-name: enter;
            animation-duration: 0.15s;
            --enter-opacity: initial;
            --enter-scale: initial;
            --enter-rotate: initial;
            --enter-translate-x: initial;
            --enter-translate-y: initial;
        }

        &[data-state="closed"],
        &[motion^="to-"],
        &[data-state="hidden"] {
            animation-name: exit;
            animation-duration: 0.15s;
            --exit-opacity: initial;
            --exit-scale: initial;
            --exit-rotate: initial;
            --exit-translate-x: initial;
            --exit-translate-y: initial;
        }

        &[data-motion^="to-"],
        &[data-motion^="closed"] {
            --exit-opacity: 0;
        }
        &[data-motion^="from-"],
        &[data-motion^="visible"] {
            --enter-opacity: 0;
        }
    }

    &-content {
        --translate-x: -50%;
        --translate-y: -50%;
        position: fixed;
        left: 50%;
        top: 50%;
        z-index: 50;
        display: grid;
        width: 100%;
        max-width: 32rem;
        transform: translate(var(--translate-x), var(--translate-y)) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1);
        gap: var(--space-base);
        border: var(--border-size-s) solid hsl(var(--border));
        background-color: hsl(var(--background));
        padding: var(--space-m);
        box-shadow: var(--shadow-l);
        transition-duration: 0.2s;

        &[data-motion^="from-"],
        &[data-state="open"],
        &[data-state="visible"] {
            animation-name: enter;
            animation-duration: 0.15s;
            --enter-opacity: initial;
            --enter-scale: initial;
            --enter-rotate: initial;
            --enter-translate-x: initial;
            --enter-translate-y: initial;
        }

        &[data-motion^="to-"],
        &[data-state="closed"],
        &[data-state="hidden"] {
            animation-name: exit;
            animation-duration: 0.15s;
            --exit-opacity: initial;
            --exit-scale: initial;
            --exit-rotate: initial;
            --exit-translate-x: initial;
            --exit-translate-y: initial;
        }

        &[data-motion^="to-"],
        &[data-state="closed"] {
            --exit-opacity: 0;
        }

        &[data-motion^="from-"],
        &[data-state="visible"] {
            --enter-opacity: 0;
        }

        &[data-state="closed"] {
            --exit-scale: 0.95;
            --exit-translate-x: -50%;
            --exit-translate-y: -48%;
        }

        &[data-state="open"] {
            --enter-scale: 0.95;
            --enter-translate-x: -50%;
            --enter-translate-y: -48%;
        }

        border-radius: var(--border-radius-soft);
    }

    &-header {
        display: flex;
        flex-direction: column;
        text-align: center;

        @media (min-width: 640px) {
            text-align: left;
        }
    }

    &-footer {
        display: flex;
        flex-direction: column-reverse;
        gap: var(--space-base);

        @media (min-width: 640px) {
            flex-direction: row;
            justify-content: end;
            gap: var(--space-s);
        }
    }
}
