{
  "name": "table",
  "files": [
    {
      "name": "table.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./table.scss\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"table-wrapper\">\n    <table ref={ref} className={cn(\"table\", className)} {...props} />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"table-header\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody ref={ref} className={cn(\"table-body\", className)} {...props} />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot ref={ref} className={cn(\"table-footer\", className)} {...props} />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr ref={ref} className={cn(\"table-row\", className)} {...props} />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th ref={ref} className={cn(\"table-header__cell\", className)} {...props} />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td ref={ref} className={cn(\"table-cell\", className)} {...props} />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption ref={ref} className={cn(\"table-caption\", className)} {...props} />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"
    },
    {
      "name": "table.scss",
      "content": ".table {\n  border-collapse: collapse;\n  border-color: inherit;\n  caption-side: bottom;\n  font-size: var(--font-size-s);\n  text-indent: 0;\n  width: 100%;\n\n  &-wrapper {\n    overflow: auto;\n    position: relative;\n    width: 100%;\n  }\n\n  &-header {\n    &__cell {\n      color: hsl(var(--muted-foreground));\n      font-weight: var(--font-semi-bold);\n      height: var(--space-xxl);\n      padding: 0 var(--space-base);\n      text-align: left;\n      vertical-align: middle;\n\n      &:has([role=\"checkbox\"]) {\n        padding-right: 0;\n        width: 100px;\n      }\n    }\n  }\n\n  &-row {\n    background-color: transparent;\n    border-bottom: var(--border-size-s) solid hsl(var(--border));\n    transition: 0.3s ease;\n\n    &:hover {\n      background-color: hsl(var(--muted) / 0.5);\n    }\n\n    &[data-state=\"selected\"] {\n      background-color: hsl(var(--muted));\n    }\n  }\n\n  &-body {\n    .table-row:last-of-type {\n      border-bottom: none;\n    }\n  }\n\n  &-cell {\n    padding: var(--space-base);\n    vertical-align: middle;\n\n    &:has([role=\"checkbox\"]) {\n      padding-right: 0;\n    }\n  }\n\n  &-footer {\n    background-color: hsl(var(--muted) / 0.5);\n    border-top: var(--border-size-s) solid hsl(var(--border));\n    font-weight: var(--font-semi-bold);\n\n    & > .table-row:last-of-type {\n      border-bottom: none;\n    }\n  }\n\n  &-caption {\n    color: hsl(var(--muted-foreground));\n    font-size: var(--font-size-s);\n    margin-top: var(--space-base);\n  }\n}\n"
    },
    {
      "name": "table.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \".\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/table\n * # or\n * $ npm install @shadcn-ui-sass/table\n * ```\n *\n */\n\nconst meta: Meta<typeof Table> = {\n  title: \"Components/Table\",\n  component: Table,\n  tags: [\"autodocs\"],\n  decorators: [\n    (Story) => (\n      <div>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\n/* ----- SAMPLE DATA ----- */\nconst invoices = [\n  {\n    invoice: \"INV001\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$250.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV002\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$150.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV003\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$350.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV004\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$450.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV005\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$550.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV006\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$200.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV007\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$300.00\",\n    paymentMethod: \"Credit Card\",\n  },\n]\n/* ---------- */\n\ntype Story = StoryObj<typeof Table>\n\nconst template = (args: any) => (\n  <Table {...args}>\n    <TableCaption>A list of your recent invoices.</TableCaption>\n    <TableHeader>\n      <TableRow>\n        <TableHead className=\"w-[100px]\">Invoice</TableHead>\n        <TableHead>Status</TableHead>\n        <TableHead>Method</TableHead>\n        <TableHead className=\"text-right\">Amount</TableHead>\n      </TableRow>\n    </TableHeader>\n    <TableBody>\n      {invoices.map((invoice) => (\n        <TableRow key={invoice.invoice}>\n          <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n          <TableCell>{invoice.paymentStatus}</TableCell>\n          <TableCell>{invoice.paymentMethod}</TableCell>\n          <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n    <TableFooter>\n      <TableRow>\n        <TableCell colSpan={3}>Total</TableCell>\n        <TableCell className=\"text-right\">$2,500.00</TableCell>\n      </TableRow>\n    </TableFooter>\n  </Table>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n} from \"./table\"\n"
    }
  ],
  "type": "components:ui"
}