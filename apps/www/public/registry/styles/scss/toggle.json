{
  "name": "toggle",
  "dependencies": [
    "@radix-ui/react-toggle"
  ],
  "files": [
    {
      "name": "toggle.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./toggle.scss\"\n\nconst toggleVariants = cva(\"toggle\", {\n  variants: {\n    variant: {\n      default: \"\",\n      outline: \"toggle--outline\",\n    },\n    size: {\n      default: \"\",\n      sm: \"toggle--small\",\n      lg: \"toggle--large\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\",\n  },\n})\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n"
    },
    {
      "name": "toggle.scss",
      "content": ".toggle {\n  align-items: center;\n  background-color: transparent;\n  border-radius: var(--border-radius-soft);\n  display: inline-flex;\n  font-size: var(--font-size-s);\n  font-weight: var(--font-semi-bold);\n  height: var(--space-xl);\n  justify-content: center;\n  padding: 0 var(--space-base);\n  transition: 0.3s ease;\n\n  &:hover {\n    background-color: hsl(var(--muted));\n    color: hsl(var(--muted-foreground));\n  }\n\n  &:focus-visible {\n    outline: 1px solid hsl(var(--ring));\n  }\n\n  &[data-state=\"on\"] {\n    background-color: hsl(var(--muted));\n    color: hsl(var(--muted-foreground));\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  &--outline {\n    border: var(--border-size-s) solid hsl(var(--input));\n    box-shadow: 0 0 #0000, 0 0 #0000, 0 0 #0000;\n\n    &:hover {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n  }\n\n  &--small {\n    height: var(--space-l);\n    padding: 0 var(--space-s);\n  }\n\n  &--large {\n    height: var(--space-xl);\n    padding: 0 var(--space-base);\n  }\n}\n"
    },
    {
      "name": "toggle.stories.tsx",
      "content": "import { ToggleGroup } from \"@/shadcn-scss/toggle-group\"\nimport type { Meta, StoryObj } from \"@storybook/react\"\nimport { Bold } from \"lucide-react\"\n\nimport { Toggle } from \".\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/toggle\n * # or\n * $ npm install @shadcn-ui-sass/toggle\n * ```\n *\n */\n\nconst meta: Meta<typeof Toggle> = {\n  title: \"Components/Toggle\",\n  component: Toggle,\n  tags: [\"autodocs\"],\n  argTypes: {\n    variant: {\n      options: [\"default\", \"outline\"],\n      control: { type: \"radio\" },\n    },\n    size: {\n      options: [\"default\", \"sm\", \"lg\"],\n      control: { type: \"select\" },\n    },\n  },\n}\n\ntype Story = StoryObj<typeof ToggleGroup>\n\nconst template = (args: any) => (\n  <Toggle {...args}>\n    <Bold />\n  </Toggle>\n)\n\nexport const Default: Story = {\n  args: {\n    variant: \"default\",\n    size: \"default\",\n  },\n  render: (args) => template(args),\n}\n\nexport const Small: Story = {\n  args: {\n    variant: \"default\",\n    size: \"sm\",\n  },\n  render: (args) => template(args),\n}\n\nexport const Large: Story = {\n  args: {\n    variant: \"default\",\n    size: \"lg\",\n  },\n  render: (args) => template(args),\n}\n\nexport const Outline: Story = {\n  args: {\n    variant: \"outline\",\n    size: \"default\",\n  },\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export { Toggle, toggleVariants } from \"./toggle\"\n"
    }
  ],
  "type": "components:ui"
}