{
  "name": "popover",
  "dependencies": [
    "@radix-ui/react-popover"
  ],
  "files": [
    {
      "name": "popover.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./popover.scss\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\"popover-content\", className)}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"
    },
    {
      "name": "popover.scss",
      "content": ".popover {\n  &-content {\n    z-index: 50;\n    width: 20rem;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-base);\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-m);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n  }\n}\n"
    },
    {
      "name": "popover.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport { Popover, PopoverContent, PopoverTrigger } from \".\"\nimport { Row } from \"../../structure/Grid\"\nimport { Button } from \"../button\"\nimport { Input } from \"../input\"\nimport { Label } from \"../label\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/popover\n * # or\n * $ npm install @shadcn-ui-sass/popover\n * ```\n *\n */\n\nconst meta: Meta<typeof Popover> = {\n  title: \"Components/Popover\",\n  component: Popover,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof Popover>\n\nconst template = (args: any) => (\n  <Popover {...args}>\n    <PopoverTrigger asChild>\n      <Button variant=\"outline\">Open popover</Button>\n    </PopoverTrigger>\n    <PopoverContent>\n      <div className=\"display-grid gap-base\">\n        <div>\n          <h4 className=\"font-medium\" style={{ lineHeight: 1 }}>\n            Dimensions\n          </h4>\n          <p className=\"font-size-s text-neutral-7 margin-top-s\">\n            Set the dimensions for the layer.\n          </p>\n        </div>\n        <div className=\"display-grid gap-s margin-top-s\">\n          <Row columns={3} className=\"align-items-center\">\n            <Label htmlFor=\"width\">Width</Label>\n            <Input\n              id=\"width\"\n              defaultValue=\"100%\"\n              className=\"col-span-2\"\n              style={{ height: \"2rem\" }}\n            />\n          </Row>\n          <Row columns={3} className=\"align-items-center\">\n            <Label htmlFor=\"maxWidth\">Max. width</Label>\n            <Input\n              id=\"maxWidth\"\n              defaultValue=\"300px\"\n              className=\"col-span-2\"\n              style={{ height: \"2rem\" }}\n            />\n          </Row>\n          <Row columns={3} className=\"align-items-center\">\n            <Label htmlFor=\"height\">Height</Label>\n            <Input\n              id=\"height\"\n              defaultValue=\"25px\"\n              className=\"col-span-2\"\n              style={{ height: \"2rem\" }}\n            />\n          </Row>\n          <Row columns={3} className=\"align-items-center\">\n            <Label htmlFor=\"maxHeight\">Max. height</Label>\n            <Input\n              id=\"maxHeight\"\n              defaultValue=\"none\"\n              className=\"col-span-2\"\n              style={{ height: \"2rem\" }}\n            />\n          </Row>\n        </div>\n      </div>\n    </PopoverContent>\n  </Popover>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export { Popover, PopoverTrigger, PopoverContent } from \"./popover\"\n"
    }
  ],
  "type": "components:ui"
}