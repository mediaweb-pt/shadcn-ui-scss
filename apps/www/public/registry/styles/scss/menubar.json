{
  "name": "menubar",
  "dependencies": [
    "@radix-ui/react-menubar"
  ],
  "files": [
    {
      "name": "menubar.tsx",
      "content": "import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./menubar.scss\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\"menubar\", className)}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\"menubar-trigger\", className)}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\"menubar-subTrigger\", inset && \"padding-left-l\", className)}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"margin-left-auto\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\"menubar-subContent\", className)}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\"menubar-content\", className)}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\"menubar-item\", inset && \"padding-left-l\", className)}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\"menubar-item-checkbox\", className)}\n    checked={checked}\n    {...props}\n  >\n    <span>\n      <MenubarPrimitive.ItemIndicator>\n        <Check />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\"menubar-item-radio\", className)}\n    {...props}\n  >\n    <span>\n      <MenubarPrimitive.ItemIndicator>\n        <Circle />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\"menubar-label\", inset && \"padding-left-l\", className)}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"menubar-separator\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return <span className={cn(\"menubar-shortcut\", className)} {...props} />\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n"
    },
    {
      "name": "menubar.scss",
      "content": ".menubar {\n  display: flex;\n  height: 2.5rem;\n  align-items: center;\n  gap: var(--space-xs);\n  border-radius: var(--border-radius-soft);\n  border: var(--border-size-s) solid hsl(var(--border));\n  background-color: hsl(var(--background));\n  padding: var(--space-xs);\n\n  &-trigger {\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    font-weight: var(--font-medium);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-state=\"open\"] {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n  }\n\n  &-subTrigger {\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-state=\"open\"] {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    > svg {\n      height: var(--font-size-base);\n      width: var(--font-size-base);\n    }\n  }\n\n  &-subContent {\n    z-index: 50;\n    min-width: 8rem;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-xs);\n    color: hsl(var(--popover-foreground));\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n  }\n\n  &-content {\n    z-index: 50;\n    min-width: 12rem;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-xs);\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-m);\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n  }\n\n  &-item {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    &-checkbox {\n      position: relative;\n      display: flex;\n      cursor: default;\n      user-select: none;\n      align-items: center;\n      border-radius: var(--border-radius-soft);\n      padding: var(--space-xs) var(--space-s) var(--space-xs) var(--space-l);\n      font-size: var(--font-size-s);\n      outline: 2px solid transparent;\n      outline-offset: 2px;\n\n      &:focus {\n        background-color: hsl(var(--accent));\n        color: hsl(var(--accent-foreground));\n      }\n\n      &[data-disabled] {\n        pointer-events: none;\n        opacity: 0.5;\n      }\n\n      > span {\n        position: absolute;\n        left: var(--space-s);\n        display: flex;\n        height: 0.875rem;\n        width: 0.875rem;\n        align-items: center;\n        justify-content: center;\n\n        svg {\n          height: var(--font-size-base);\n          width: var(--font-size-base);\n        }\n      }\n    }\n\n    &-radio {\n      position: relative;\n      display: flex;\n      cursor: default;\n      user-select: none;\n      align-items: center;\n      border-radius: var(--border-radius-soft);\n      padding: var(--space-xs) var(--space-s) var(--space-xs) var(--space-l);\n      font-size: var(--font-size-s);\n      outline: 2px solid transparent;\n      outline-offset: 2px;\n\n      &:focus {\n        background-color: hsl(var(--accent));\n        color: hsl(var(--accent-foreground));\n      }\n\n      &[data-disabled] {\n        pointer-events: none;\n        opacity: 0.5;\n      }\n\n      > span {\n        position: absolute;\n        left: var(--space-s);\n        display: flex;\n        height: 0.875rem;\n        width: 0.875rem;\n        align-items: center;\n        justify-content: center;\n\n        svg {\n          height: var(--font-size-xxs);\n          width: var(--font-size-xxs);\n          fill: currentColor;\n        }\n      }\n    }\n  }\n\n  &-label {\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    font-size: var(--font-semi-bold);\n  }\n\n  &-separator {\n    margin: var(--space-xs) calc(var(--space-xs) * -1);\n    height: 1px;\n    background-color: hsl(var(--muted));\n  }\n\n  &-shortcut {\n    margin-left: auto;\n    font-size: var(--font-size-xs);\n    letter-spacing: 0.1em;\n    color: hsl(var(--muted-foreground));\n  }\n}\n"
    },
    {
      "name": "menubar.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport {\n  Menubar,\n  MenubarCheckboxItem,\n  MenubarContent,\n  MenubarItem,\n  MenubarMenu,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarSeparator,\n  MenubarShortcut,\n  MenubarSub,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarTrigger,\n} from \".\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/menu-bar\n * # or\n * $ npm install @shadcn-ui-sass/menu-bar\n * ```\n *\n */\n\nconst meta: Meta<typeof Menubar> = {\n  title: \"Components/Menubar\",\n  component: Menubar,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof Menubar>\n\nconst template = (args: any) => (\n  <Menubar {...args}>\n    <MenubarMenu>\n      <MenubarTrigger>File</MenubarTrigger>\n      <MenubarContent>\n        <MenubarItem>\n          New Tab <MenubarShortcut>⌘T</MenubarShortcut>\n        </MenubarItem>\n        <MenubarItem>\n          New Window <MenubarShortcut>⌘N</MenubarShortcut>\n        </MenubarItem>\n        <MenubarItem disabled>New Incognito Window</MenubarItem>\n        <MenubarSeparator />\n        <MenubarSub>\n          <MenubarSubTrigger>Share</MenubarSubTrigger>\n          <MenubarSubContent>\n            <MenubarItem>Email link</MenubarItem>\n            <MenubarItem>Messages</MenubarItem>\n            <MenubarItem>Notes</MenubarItem>\n          </MenubarSubContent>\n        </MenubarSub>\n        <MenubarSeparator />\n        <MenubarItem>\n          Print... <MenubarShortcut>⌘P</MenubarShortcut>\n        </MenubarItem>\n      </MenubarContent>\n    </MenubarMenu>\n    <MenubarMenu>\n      <MenubarTrigger>Edit</MenubarTrigger>\n      <MenubarContent>\n        <MenubarItem>\n          Undo <MenubarShortcut>⌘Z</MenubarShortcut>\n        </MenubarItem>\n        <MenubarItem>\n          Redo <MenubarShortcut>⇧⌘Z</MenubarShortcut>\n        </MenubarItem>\n        <MenubarSeparator />\n        <MenubarSub>\n          <MenubarSubTrigger>Find</MenubarSubTrigger>\n          <MenubarSubContent>\n            <MenubarItem>Search the web</MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>Find...</MenubarItem>\n            <MenubarItem>Find Next</MenubarItem>\n            <MenubarItem>Find Previous</MenubarItem>\n          </MenubarSubContent>\n        </MenubarSub>\n        <MenubarSeparator />\n        <MenubarItem>Cut</MenubarItem>\n        <MenubarItem>Copy</MenubarItem>\n        <MenubarItem>Paste</MenubarItem>\n      </MenubarContent>\n    </MenubarMenu>\n    <MenubarMenu>\n      <MenubarTrigger>View</MenubarTrigger>\n      <MenubarContent>\n        <MenubarCheckboxItem>Always Show Bookmarks Bar</MenubarCheckboxItem>\n        <MenubarCheckboxItem checked>Always Show Full URLs</MenubarCheckboxItem>\n        <MenubarSeparator />\n        <MenubarItem inset>\n          Reload <MenubarShortcut>⌘R</MenubarShortcut>\n        </MenubarItem>\n        <MenubarItem disabled inset>\n          Force Reload <MenubarShortcut>⇧⌘R</MenubarShortcut>\n        </MenubarItem>\n        <MenubarSeparator />\n        <MenubarItem inset>Toggle Fullscreen</MenubarItem>\n        <MenubarSeparator />\n        <MenubarItem inset>Hide Sidebar</MenubarItem>\n      </MenubarContent>\n    </MenubarMenu>\n    <MenubarMenu>\n      <MenubarTrigger>Profiles</MenubarTrigger>\n      <MenubarContent>\n        <MenubarRadioGroup value=\"benoit\">\n          <MenubarRadioItem value=\"andy\">Andy</MenubarRadioItem>\n          <MenubarRadioItem value=\"benoit\">Benoit</MenubarRadioItem>\n          <MenubarRadioItem value=\"Luis\">Luis</MenubarRadioItem>\n        </MenubarRadioGroup>\n        <MenubarSeparator />\n        <MenubarItem inset>Edit...</MenubarItem>\n        <MenubarSeparator />\n        <MenubarItem inset>Add Profile...</MenubarItem>\n      </MenubarContent>\n    </MenubarMenu>\n  </Menubar>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n} from \"./menubar\"\n"
    }
  ],
  "type": "components:ui"
}