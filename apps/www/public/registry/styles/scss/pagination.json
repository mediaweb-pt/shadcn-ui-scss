{
  "name": "pagination",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "pagination.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { ButtonProps, buttonVariants } from \"../button\"\nimport \"./pagination.scss\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"pagination\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul ref={ref} className={cn(\"pagination__content\", className)} {...props} />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    className={cn(\"pagination__previous\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"pagination__icon\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    className={cn(\"pagination__next\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"pagination__icon\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"pagination__ellipsis\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"pagination__icon\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n"
    },
    {
      "name": "pagination.scss",
      "content": ".pagination {\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  &__content {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--space-xs);\n  }\n\n  &__previous,\n  &__next {\n    gap: var(--space-xs);\n    padding-left: var(--space-s);\n    padding-right: var(--space-s);\n    width: fit-content;\n  }\n\n  &__ellipsis {\n    align-items: center;\n    display: flex;\n    height: var(--space-l);\n    justify-content: center;\n    width: var(--space-l);\n  }\n\n  &__icon {\n    height: var(--space-base);\n    width: var(--space-base);\n  }\n}\n"
    },
    {
      "name": "pagination.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \".\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/pagination\n * # or\n * $ npm install @shadcn-ui-sass/pagination\n * ```\n *\n */\n\nconst meta: Meta<typeof Pagination> = {\n  title: \"Components/Pagination\",\n  component: Pagination,\n  tags: [\"autodocs\"],\n  decorators: [\n    (Story) => (\n      <div>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\ntype Story = StoryObj<typeof Pagination>\n\nconst template = (args: any) => (\n  <Pagination {...args}>\n    <PaginationContent>\n      <PaginationPrevious href=\"#\" />\n      <PaginationItem>\n        <PaginationLink href=\"#\">1</PaginationLink>\n      </PaginationItem>\n      <PaginationItem>\n        <PaginationLink href=\"#\" isActive>\n          2\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem>\n        <PaginationLink href=\"#\">3</PaginationLink>\n      </PaginationItem>\n      <div>\n        <PaginationEllipsis />\n      </div>\n      <PaginationNext href=\"#\" />\n    </PaginationContent>\n  </Pagination>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"./pagination\"\n"
    }
  ],
  "type": "components:ui"
}