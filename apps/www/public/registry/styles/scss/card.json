{
  "name": "card",
  "files": [
    {
      "name": "card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./card.scss\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  return <div ref={ref} className={cn(\"card\", className)} {...props} />\n})\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"card__header\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3 ref={ref} className={cn(\"card__title\", className)} {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn(\"card__description\", className)} {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"card__content\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"card__footer\", className)} {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"
    },
    {
      "name": "card.scss",
      "content": ".card {\n  background-color: hsl(var(--card));\n  border: var(--border-size-s) solid hsl(var(--border));\n  border-radius: var(--border-radius-soft);\n  color: hsl(var(--card-foreground));\n  box-shadow: var(--shadow-s);\n\n  &__header {\n    display: flex;\n    flex-direction: column;\n    padding: var(--space-m);\n  }\n\n  &__title {\n    font-size: var(--font-size-xl);\n    font-weight: var(--font-semi-bold);\n    letter-spacing: -0.025em;\n    line-height: 1;\n  }\n\n  &__description {\n    font-size: var(--font-size-s);\n    color: hsl(var(--muted-foreground));\n    margin-top: var(--space-xs);\n  }\n\n  &__content {\n    padding: var(--space-none) var(--space-m) var(--space-m) var(--space-m);\n  }\n\n  &__footer {\n    display: flex;\n    align-items: center;\n    padding: var(--space-none) var(--space-m) var(--space-m) var(--space-m);\n  }\n}\n"
    },
    {
      "name": "card.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\nimport { BellRing, Check } from \"lucide-react\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \".\"\nimport { cn } from \"../../utils/utils\"\nimport { Button } from \"../button\"\nimport { Input } from \"../input\"\nimport { Label } from \"../label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"../select\"\nimport { Switch } from \"../switch\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/card\n * # or\n * $ npm install @shadcn-ui-sass/card\n * ```\n *\n */\n\nconst meta: Meta<typeof Card> = {\n  title: \"Components/Card\",\n  component: Card,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof Card>\n\nconst template = (args: any) => (\n  <Card {...args} style={{ width: 350 }}>\n    <CardHeader>\n      <CardTitle>Create project</CardTitle>\n      <CardDescription>Deploy your new project in one-click.</CardDescription>\n    </CardHeader>\n    <CardContent>\n      <form>\n        <div className=\"display-grid align-items-center gap-base\">\n          <div className=\"display-flex flex-direction-column gap-xs\">\n            <Label htmlFor=\"name\">Name</Label>\n            <Input id=\"name\" placeholder=\"Name of your project\" />\n          </div>\n          <div className=\"display-flex flex-direction-column\">\n            <Label htmlFor=\"framework\" className=\"margin-bottom-xs\">\n              Framework\n            </Label>\n            <Select>\n              <SelectTrigger id=\"framework\">\n                <SelectValue placeholder=\"Select\" />\n              </SelectTrigger>\n              <SelectContent position=\"popper\">\n                <SelectItem value=\"next\">Next.js</SelectItem>\n                <SelectItem value=\"sveltekit\">SvelteKit</SelectItem>\n                <SelectItem value=\"astro\">Astro</SelectItem>\n                <SelectItem value=\"nuxt\">Nuxt.js</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </form>\n    </CardContent>\n    <CardFooter className=\"display-flex justify-content-space-between\">\n      <Button variant=\"outline\">Cancel</Button>\n      <Button>Deploy</Button>\n    </CardFooter>\n  </Card>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nconst notifications = [\n  {\n    title: \"Your call has been confirmed.\",\n    description: \"1 hour ago\",\n  },\n  {\n    title: \"You have a new message!\",\n    description: \"1 hour ago\",\n  },\n  {\n    title: \"Your subscription is expiring soon!\",\n    description: \"2 hours ago\",\n  },\n]\nexport const Example: Story = {\n  render: (args) => (\n    <Card {...args} style={{ width: 380 }}>\n      <CardHeader>\n        <CardTitle>Notifications</CardTitle>\n        <CardDescription>You have 3 unread messages.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"display-grid gap-base\">\n        <div className=\"display-flex align-items-center gap-base border-size-s border-radius-soft padding-base\">\n          <BellRing />\n          <div className=\"flex1\">\n            <p className=\"font-size-s font-medium\" style={{ lineHeight: 1 }}>\n              Push Notifications\n            </p>\n            <p className=\"margin-top-xs font-size-s text-neutral-7\">\n              Send notifications to device.\n            </p>\n          </div>\n          <Switch />\n        </div>\n        <div>\n          {notifications.map((notification, index) => (\n            <div\n              key={index}\n              className={cn(\"display-flex gap-base\", {\n                \"margin-bottom-base padding-bottom-base\":\n                  index < notifications.length - 1,\n              })}\n            >\n              <span\n                className=\"display-flex border-radius-circle background-info margin-top-xs\"\n                style={{ width: \"0.5rem\", height: \"0.5rem\" }}\n              />\n              <div>\n                <p\n                  className=\"font-size-s font-medium\"\n                  style={{ lineHeight: 1 }}\n                >\n                  {notification.title}\n                </p>\n                <p className=\"margin-top-xs font-size-s text-neutral-7\">\n                  {notification.description}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"full-width\">\n          <Check className=\"margin-right-s\" /> Mark all as read\n        </Button>\n      </CardFooter>\n    </Card>\n  ),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n} from \"./card\"\n"
    }
  ],
  "type": "components:ui"
}