{
  "name": "dropdown-menu",
  "dependencies": [
    "@radix-ui/react-dropdown-menu"
  ],
  "files": [
    {
      "name": "dropdown-menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { DropdownMenuCheckboxItemProps } from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./dropdown-menu.scss\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(\"dropdown-menu-trigger\", className)}\n    {...props}\n  />\n))\nDropdownMenuTrigger.displayName = DropdownMenuPrimitive.Trigger.displayName\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"dropdown-menu-subTrigger\",\n      inset && \"padding-left-m\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"margin-left-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\"dropdown-menu-subContent\", className)}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\"dropdown-menu-content\", className)}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\"dropdown-menu-item\", inset && \"padding-left-m\", className)}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\"dropdown-menu-checkboxItem\", className)}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"dropdown-menu-checkboxItem-checkbox\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\"dropdown-menu-radioItem\", className)}\n    {...props}\n  >\n    <span className=\"dropdown-menu-radioItem-radio\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\"dropdown-menu-label\", inset && \"padding-left-l\", className)}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"dropdown-menu-separator\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return <span className={cn(\"dropdown-menu-shortcut\", className)} {...props} />\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\nexport type { DropdownMenuCheckboxItemProps }\n"
    },
    {
      "name": "dropdown-menu.scss",
      "content": ".dropdown-menu {\n  &-trigger {\n    .icon {\n      font-size: var(--font-size-base);\n    }\n\n    > svg {\n      width: var(--font-size-base);\n      height: var(--font-size-base);\n    }\n  }\n\n  &-subTrigger {\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    .icon {\n      font-size: var(--font-size-base);\n    }\n\n    > svg {\n      width: var(--font-size-base);\n      height: var(--font-size-base);\n    }\n\n    &:focus {\n      background-color: hsl(var(--accent));\n    }\n\n    &[data-state=\"open\"] {\n      background-color: hsl(var(--accent));\n    }\n  }\n\n  &-subContent {\n    z-index: 50;\n    min-width: 8rem;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-xs);\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-l);\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n  }\n\n  &-content {\n    z-index: 50;\n    min-width: 8rem;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-xs);\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-m);\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n  }\n\n  &-item {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n    transition-property: color, background-color, border-color,\n      text-decoration-color, fill, stroke;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.15s;\n\n    .icon {\n      font-size: var(--font-size-base);\n    }\n\n    > svg {\n      width: var(--font-size-base);\n      height: var(--font-size-base);\n    }\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n  }\n\n  &-checkboxItem {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s) var(--space-xs) var(--space-l);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n    transition-property: color, background-color, border-color,\n      text-decoration-color, fill, stroke;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.15s;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    &-checkbox {\n      position: absolute;\n      left: 0.5rem;\n      display: flex;\n      height: 0.875rem;\n      width: 0.875rem;\n      align-items: center;\n      justify-content: center;\n\n      .icon {\n        font-size: var(--font-size-base);\n      }\n\n      svg {\n        width: var(--font-size-base);\n        height: var(--font-size-base);\n      }\n    }\n  }\n\n  &-radioItem {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s) var(--space-xs) var(--space-l);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n    transition-property: color, background-color, border-color,\n      text-decoration-color, fill, stroke;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.15s;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    &-radio {\n      position: absolute;\n      left: 0.5rem;\n      display: flex;\n      height: 0.875rem;\n      width: 0.875rem;\n      align-items: center;\n      justify-content: center;\n\n      .icon {\n        font-size: var(--font-size-xxs);\n      }\n\n      svg {\n        width: var(--font-size-xxs);\n        height: var(--font-size-xxs);\n        fill: currentColor;\n      }\n    }\n  }\n\n  &-label {\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    font-weight: var(--font-semi-bold);\n  }\n\n  &-separator {\n    margin: var(--space-xs) calc(var(--space-xs) * -1);\n    height: 1px;\n    background-color: hsl(var(--muted));\n  }\n\n  &-shortcut {\n    margin-left: auto;\n    font-size: var(--font-size-xs);\n    letter-spacing: 0.1em;\n    opacity: 0.6;\n  }\n}\n"
    },
    {
      "name": "dropdown-menu.stories.tsx",
      "content": "import { useState } from \"react\"\nimport type { Meta, StoryObj } from \"@storybook/react\"\nimport {\n  Cloud,\n  CreditCard,\n  Github,\n  Keyboard,\n  LifeBuoy,\n  LogOut,\n  Mail,\n  MessageSquare,\n  Plus,\n  PlusCircle,\n  Settings,\n  User,\n  UserPlus,\n  Users,\n} from \"lucide-react\"\n\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from \".\"\nimport { Button } from \"../button\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/dropdown-menu\n * # or\n * $ npm install @shadcn-ui-sass/dropdown-menu\n * ```\n *\n */\n\nconst meta: Meta<typeof DropdownMenu> = {\n  title: \"Components/DropdownMenu\",\n  component: DropdownMenu,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof DropdownMenu>\n\nconst template = (args: any) => (\n  <DropdownMenu {...args}>\n    <DropdownMenuTrigger asChild>\n      <Button variant=\"outline\">Open</Button>\n    </DropdownMenuTrigger>\n    <DropdownMenuContent style={{ width: \"14rem\" }}>\n      <DropdownMenuLabel>My Account</DropdownMenuLabel>\n      <DropdownMenuSeparator />\n      <DropdownMenuGroup>\n        <DropdownMenuItem>\n          <User className=\"margin-right-s\" />\n          <span>Profile</span>\n          <DropdownMenuShortcut>⇧⌘P</DropdownMenuShortcut>\n        </DropdownMenuItem>\n        <DropdownMenuItem>\n          <CreditCard className=\"margin-right-s\" />\n          <span>Billing</span>\n          <DropdownMenuShortcut>⌘B</DropdownMenuShortcut>\n        </DropdownMenuItem>\n        <DropdownMenuItem>\n          <Settings className=\"margin-right-s\" />\n          <span>Settings</span>\n          <DropdownMenuShortcut>⌘S</DropdownMenuShortcut>\n        </DropdownMenuItem>\n        <DropdownMenuItem>\n          <Keyboard className=\"margin-right-s\" />\n          <span>Keyboard shortcuts</span>\n          <DropdownMenuShortcut>⌘K</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuGroup>\n      <DropdownMenuSeparator />\n      <DropdownMenuGroup>\n        <DropdownMenuItem>\n          <Users className=\"margin-right-s\" />\n          <span>Team</span>\n        </DropdownMenuItem>\n        <DropdownMenuSub>\n          <DropdownMenuSubTrigger>\n            <UserPlus className=\"margin-right-s\" />\n            <span>Invite users</span>\n          </DropdownMenuSubTrigger>\n          <DropdownMenuPortal>\n            <DropdownMenuSubContent>\n              <DropdownMenuItem>\n                <Mail className=\"margin-right-s\" />\n                <span>Email</span>\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <MessageSquare className=\"margin-right-s\" />\n                <span>Message</span>\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>\n                <PlusCircle className=\"margin-right-s\" />\n                <span>More...</span>\n              </DropdownMenuItem>\n            </DropdownMenuSubContent>\n          </DropdownMenuPortal>\n        </DropdownMenuSub>\n        <DropdownMenuItem>\n          <Plus className=\"margin-right-s\" />\n          <span>New Team</span>\n          <DropdownMenuShortcut>⌘+T</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuGroup>\n      <DropdownMenuSeparator />\n      <DropdownMenuItem>\n        <Github className=\"margin-right-s\" />\n        <span>GitHub</span>\n      </DropdownMenuItem>\n      <DropdownMenuItem>\n        <LifeBuoy className=\"margin-right-s\" />\n        <span>Support</span>\n      </DropdownMenuItem>\n      <DropdownMenuItem disabled>\n        <Cloud className=\"margin-right-s\" />\n        <span>API</span>\n      </DropdownMenuItem>\n      <DropdownMenuSeparator />\n      <DropdownMenuItem>\n        <LogOut className=\"margin-right-s\" />\n        <span>Log out</span>\n        <DropdownMenuShortcut>⇧⌘Q</DropdownMenuShortcut>\n      </DropdownMenuItem>\n    </DropdownMenuContent>\n  </DropdownMenu>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\ntype Checked = DropdownMenuCheckboxItemProps[\"checked\"]\nexport const Checkboxes: Story = {\n  render: (args) => {\n    const [showStatusBar, setShowStatusBar] = useState<Checked>(true)\n    const [showActivityBar, setShowActivityBar] = useState<Checked>(false)\n    const [showPanel, setShowPanel] = useState<Checked>(false)\n\n    return (\n      <DropdownMenu {...args}>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"outline\">Open</Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent style={{ width: \"14rem\" }}>\n          <DropdownMenuLabel>Appearance</DropdownMenuLabel>\n          <DropdownMenuSeparator />\n          <DropdownMenuCheckboxItem\n            checked={showStatusBar}\n            onCheckedChange={setShowStatusBar}\n          >\n            Status Bar\n          </DropdownMenuCheckboxItem>\n          <DropdownMenuCheckboxItem\n            checked={showActivityBar}\n            onCheckedChange={setShowActivityBar}\n            disabled\n          >\n            Activity Bar\n          </DropdownMenuCheckboxItem>\n          <DropdownMenuCheckboxItem\n            checked={showPanel}\n            onCheckedChange={setShowPanel}\n          >\n            Panel\n          </DropdownMenuCheckboxItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    )\n  },\n}\n\nexport const RadioButtons: Story = {\n  render: (args) => {\n    const [position, setPosition] = useState(\"bottom\")\n\n    return (\n      <DropdownMenu {...args}>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"outline\">Open</Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent style={{ width: \"14rem\" }}>\n          <DropdownMenuLabel>Panel Position</DropdownMenuLabel>\n          <DropdownMenuSeparator />\n          <DropdownMenuRadioGroup value={position} onValueChange={setPosition}>\n            <DropdownMenuRadioItem value=\"top\">Top</DropdownMenuRadioItem>\n            <DropdownMenuRadioItem value=\"bottom\">Bottom</DropdownMenuRadioItem>\n            <DropdownMenuRadioItem value=\"right\">Right</DropdownMenuRadioItem>\n          </DropdownMenuRadioGroup>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    )\n  },\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n} from \"./dropdown-menu\"\n\nexport type { DropdownMenuCheckboxItemProps } from \"./dropdown-menu\"\n"
    }
  ],
  "type": "components:ui"
}