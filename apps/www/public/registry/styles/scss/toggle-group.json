{
  "name": "toggle-group",
  "dependencies": [
    "@radix-ui/react-toggle-group"
  ],
  "registryDependencies": [
    "toggle"
  ],
  "files": [
    {
      "name": "toggle-group.tsx",
      "content": "import React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./toggle-group.scss\"\nimport { toggleVariants } from \"../toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"toggle-group\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n"
    },
    {
      "name": "toggle-group.scss",
      "content": ".toggle-group {\n  align-items: center;\n  display: flex;\n  gap: var(--space-xs);\n  justify-content: center;\n}\n"
    },
    {
      "name": "toggle-group.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\nimport { Bold, Italic, Underline } from \"lucide-react\"\n\nimport { ToggleGroup, ToggleGroupItem } from \".\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/toggle-group\n * # or\n * $ npm install @shadcn-ui-sass/toggle-group\n * ```\n *\n */\n\nconst meta: Meta<typeof ToggleGroup> = {\n  title: \"Components/ToggleGroup\",\n  component: ToggleGroup,\n  tags: [\"autodocs\"],\n  args: {\n    type: \"multiple\",\n    disabled: false,\n  },\n  argTypes: {\n    type: {\n      options: [\"single\", \"multiple\"],\n      control: { type: \"select\" },\n    },\n  },\n}\n\ntype Story = StoryObj<typeof ToggleGroup>\n\nconst template = (args: any) => (\n  <ToggleGroup type=\"multiple\" variant={\"default\"} {...args}>\n    <ToggleGroupItem value=\"bold\" aria-label=\"Toggle bold\">\n      <Bold />\n    </ToggleGroupItem>\n    <ToggleGroupItem value=\"italic\" aria-label=\"Toggle italic\">\n      <Italic />\n    </ToggleGroupItem>\n    <ToggleGroupItem value=\"underline\" aria-label=\"Toggle underline\">\n      <Underline />\n    </ToggleGroupItem>\n  </ToggleGroup>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport const SingleSelection: Story = {\n  args: {\n    type: \"single\",\n  },\n  render: (args) => template(args),\n}\n\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n  },\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export { ToggleGroup, ToggleGroupItem } from \"./toggle-group\"\n"
    }
  ],
  "type": "components:ui"
}