{
  "name": "sheet",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./sheet.scss\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\"sheet__overlay\", className)}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\"sheet\", {\n  variants: {\n    side: {\n      top: \"sheet--top\",\n      bottom: \"sheet--bottom\",\n      left: \"sheet--left\",\n      right: \"sheet--right\",\n    },\n  },\n  defaultVariants: {\n    side: \"right\",\n  },\n})\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"sheet__close-btn\">\n        <X />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"sheet__header\", className)} {...props} />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"sheet__footer\", className)} {...props} />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"sheet__title\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"sheet__description\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"
    },
    {
      "name": "sheet.scss",
      "content": ".sheet {\n  background-color: hsl(var(--background));\n  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  gap: var(--space-base);\n  padding: var(--space-m);\n  position: fixed;\n  transition: 0.3s ease-in-out;\n  z-index: 50;\n\n  &[data-state=\"open\"] {\n    animation-duration: 0.5s;\n    animation-name: enter;\n  }\n\n  &[data-state=\"closed\"] {\n    animation-duration: 0.3s;\n    animation-name: exit;\n  }\n\n  &--top {\n    border-bottom: var(--border-size-s) solid hsl(var(--border));\n    left: 0;\n    right: 0;\n    top: 0;\n\n    &[data-state=\"open\"] {\n      animation: slideInFromTop 0.3s ease-in-out;\n    }\n\n    &[data-state=\"closed\"] {\n      animation: slideOutToTop 0.3s ease-in-out;\n    }\n  }\n\n  &--bottom {\n    border-bottom: var(--border-size-s) solid hsl(var(--border));\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &[data-state=\"open\"] {\n      animation: slideInFromBottom 0.3s ease-in-out;\n    }\n\n    &[data-state=\"closed\"] {\n      animation: slideOutToBottom 0.3s ease-in-out;\n    }\n  }\n\n  &--left {\n    border-right: var(--border-size-s) solid hsl(var(--border));\n    bottom: 0;\n    height: 100%;\n    left: 0;\n    top: 0;\n    width: 75%;\n\n    &[data-state=\"open\"] {\n      animation: slideInFromLeft 0.3s ease-in-out;\n    }\n\n    &[data-state=\"closed\"] {\n      animation: slideOutToLeft 0.3s ease-in-out;\n    }\n\n    @media (min-width: 640px) {\n      margin: auto;\n      max-width: 24rem;\n    }\n  }\n\n  &--right {\n    border-right: var(--border-size-s) solid hsl(var(--border));\n    bottom: 0;\n    height: 100%;\n    right: 0;\n    top: 0;\n    width: 75%;\n\n    &[data-state=\"open\"] {\n      animation: slideInFromRight 0.3s ease-in-out;\n    }\n\n    &[data-state=\"closed\"] {\n      animation: slideOutToRight 0.3s ease-in-out;\n    }\n\n    @media (min-width: 640px) {\n      margin: auto;\n      max-width: 24rem;\n    }\n  }\n\n  &__overlay {\n    background-color: rgba(0, 0, 0, 0.8);\n    inset: 0px;\n    position: fixed;\n    z-index: 50;\n\n    &[data-state=\"open\"] {\n      animation-duration: 0.15s;\n      animation-name: enter;\n    }\n    &[data-state=\"closed\"] {\n      animation-duration: 0.15s;\n      animation-name: exit;\n    }\n  }\n\n  &__close-btn {\n    border-radius: var(--border-radius-soft);\n    color: var(--color-neutral-7);\n    opacity: 0.5;\n    padding: var(--space-s);\n    position: absolute;\n    right: var(--space-s);\n    top: var(--space-s);\n    transition: 0.3s ease;\n\n    &:hover {\n      color: hsl(var(--foreground));\n      opacity: 1;\n    }\n\n    &:focus {\n      opacity: 1;\n      outline: 2px solid var(--foreground);\n    }\n  }\n\n  &__header {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n\n    & > *:not(:first-child) {\n      margin-top: var(--space-s);\n    }\n\n    @media (min-width: 640px) {\n      text-align: left;\n    }\n  }\n\n  &__footer {\n    display: flex;\n    flex-direction: column-reverse;\n\n    @media (min-width: 640px) {\n      flex-direction: column;\n      justify-content: flex-end;\n\n      & > *:not(:first-child) {\n        margin-left: var(--space-s);\n      }\n    }\n  }\n\n  &__title {\n    color: hsl(var(--foreground));\n    font-size: var(--font-size-m);\n    font-weight: var(--font-semi-bold);\n  }\n\n  &__description {\n    color: hsl(var(--muted-foreground));\n    font-size: var(--font-size-s);\n  }\n}\n"
    },
    {
      "name": "sheet.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \".\"\nimport { Button } from \"../button\"\nimport { Input } from \"../input\"\nimport { Label } from \"../label\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/sheet\n * # or\n * $ npm install @shadcn-ui-sass/sheet\n * ```\n *\n */\n\nconst meta: Meta<typeof Sheet> = {\n  title: \"Components/Sheet\",\n  component: Sheet,\n  tags: [\"autodocs\"],\n}\n\n/* ----- SAMPLE DATA ----- */\nconst SHEET_SIDES = [\"top\", \"right\", \"bottom\", \"left\"] as const\n\ntype SheetSide = (typeof SHEET_SIDES)[number]\n/* ---------- */\n\ntype Story = StoryObj<typeof Sheet>\n\nexport const Default: Story = {\n  args: {\n    defaultOpen: false,\n  },\n  render: (args) => (\n    <Sheet {...args}>\n      <SheetTrigger asChild>\n        <Button variant=\"secondary\">Open</Button>\n      </SheetTrigger>\n      <SheetContent>\n        <SheetHeader>\n          <SheetTitle>Edit profile</SheetTitle>\n          <SheetDescription>\n            Make changes to your profile here. Click save when you're done.\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"name\" className=\"text-right\">\n              Name\n            </Label>\n            <Input id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"username\" className=\"text-right\">\n              Username\n            </Label>\n            <Input id=\"username\" value=\"@peduarte\" className=\"col-span-3\" />\n          </div>\n        </div>\n        <SheetFooter>\n          <SheetClose asChild>\n            <Button variant=\"primary\" type=\"submit\">\n              Save changes\n            </Button>\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  ),\n}\n\nexport const Directions: Story = {\n  render: () => (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {SHEET_SIDES.map((side) => (\n        <Sheet key={side}>\n          <SheetTrigger asChild>\n            <Button variant=\"secondary\">{side}</Button>\n          </SheetTrigger>\n          <SheetContent side={side}>\n            <SheetHeader>\n              <SheetTitle>Edit profile</SheetTitle>\n              <SheetDescription>\n                Make changes to your profile here. Click save when you're done.\n              </SheetDescription>\n            </SheetHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"name\" className=\"text-right\">\n                  Name\n                </Label>\n                <Input id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"username\" className=\"text-right\">\n                  Username\n                </Label>\n                <Input id=\"username\" value=\"@peduarte\" className=\"col-span-3\" />\n              </div>\n            </div>\n            <SheetFooter>\n              <SheetClose asChild>\n                <Button variant=\"primary\" type=\"submit\">\n                  Save changes\n                </Button>\n              </SheetClose>\n            </SheetFooter>\n          </SheetContent>\n        </Sheet>\n      ))}\n    </div>\n  ),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n} from \"./sheet\"\n"
    }
  ],
  "type": "components:ui"
}