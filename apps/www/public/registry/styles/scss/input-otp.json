{
  "name": "input-otp",
  "dependencies": [
    "input-otp"
  ],
  "files": [
    {
      "name": "input-otp.tsx",
      "content": "import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./input-otp.scss\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\"input-otp\", containerClassName)}\n    className={cn(\"input-otp-input\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"input-otp-group\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\"input-otp-slot\", isActive && \"is--active\", className)}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"input-otp-slot-caret\">\n          <div className=\"input-otp-slot-caret-cursor\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n"
    },
    {
      "name": "input-otp.scss",
      "content": ".input-otp {\n  display: flex;\n  align-items: center;\n  gap: var(--space-s);\n\n  &:has(:disabled) {\n    opacity: 0.5;\n  }\n\n  &-input {\n    &:disabled {\n      cursor: not-allowed;\n    }\n  }\n\n  &-group {\n    display: flex;\n    align-items: center;\n  }\n\n  &-slot {\n    position: relative;\n    display: flex;\n    height: 2.5rem;\n    width: 2.5rem;\n    align-items: center;\n    justify-content: center;\n    border-top-width: 1px;\n    border-bottom-width: 1px;\n    border-right-width: 1px;\n    border-color: hsl(var(--input));\n    font-size: var(--font-size-s);\n    transition-property: all;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.15s;\n\n    &:first-child {\n      border-top-left-radius: var(--border-radius-soft);\n      border-bottom-left-radius: var(--border-radius-soft);\n      border-left-width: 1px;\n    }\n\n    &:last-child {\n      border-top-right-radius: var(--border-radius-soft);\n      border-bottom-right-radius: var(--border-radius-soft);\n    }\n\n    &.is--active {\n      z-index: 10;\n      box-shadow: 0 0 #0000;\n    }\n\n    &-caret {\n      pointer-events: none;\n      position: absolute;\n      inset: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &-cursor {\n        height: 1rem;\n        width: 1px;\n        animation: caret-blink 1.25s ease-out infinite;\n        background-color: hsl(var(--foreground));\n        transition-duration: 1s;\n        animation-duration: 1s;\n      }\n    }\n  }\n}\n"
    },
    {
      "name": "input-otp.stories.tsx",
      "content": "import { useState } from \"react\"\nimport type { Meta, StoryObj } from \"@storybook/react\"\nimport { REGEXP_ONLY_DIGITS_AND_CHARS } from \"input-otp\"\nimport { useForm } from \"react-hook-form\"\n\nimport { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from \".\"\nimport { Button } from \"../button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"../form\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/input-otp\n * # or\n * $ npm install @shadcn-ui-sass/input-otp\n * ```\n *\n */\n\nconst meta: Meta<typeof InputOTP> = {\n  title: \"Components/InputOTP\",\n  component: InputOTP,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof InputOTP>\n\nconst template = (args: any) => (\n  <InputOTP {...args} maxLength={6} pattern={REGEXP_ONLY_DIGITS_AND_CHARS}>\n    <InputOTPGroup>\n      <InputOTPSlot index={0} />\n      <InputOTPSlot index={1} />\n      <InputOTPSlot index={2} />\n      <InputOTPSlot index={3} />\n      <InputOTPSlot index={4} />\n      <InputOTPSlot index={5} />\n    </InputOTPGroup>\n  </InputOTP>\n)\n\nexport const Pattern: Story = {\n  render: (args) => template(args),\n}\n\nexport const Separator: Story = {\n  render: (args) => (\n    <InputOTP {...args} maxLength={6}>\n      <InputOTPGroup>\n        <InputOTPSlot index={0} />\n        <InputOTPSlot index={1} />\n      </InputOTPGroup>\n      <InputOTPSeparator />\n      <InputOTPGroup>\n        <InputOTPSlot index={2} />\n        <InputOTPSlot index={3} />\n      </InputOTPGroup>\n      <InputOTPSeparator />\n      <InputOTPGroup>\n        <InputOTPSlot index={4} />\n        <InputOTPSlot index={5} />\n      </InputOTPGroup>\n    </InputOTP>\n  ),\n}\n\nexport const Controlled: Story = {\n  render: (args) => {\n    const [value, setValue] = useState(\"\")\n\n    return (\n      <div className=\"display-flex flex-direction-column align-items-center\">\n        <InputOTP\n          {...args}\n          maxLength={6}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot index={0} />\n            <InputOTPSlot index={1} />\n            <InputOTPSlot index={2} />\n            <InputOTPSlot index={3} />\n            <InputOTPSlot index={4} />\n            <InputOTPSlot index={5} />\n          </InputOTPGroup>\n        </InputOTP>\n        <div className=\"margin-top-s text-align-center font-size-s\">\n          {value === \"\" ? (\n            <>Enter your one-time password.</>\n          ) : (\n            <>You entered: {value}</>\n          )}\n        </div>\n      </div>\n    )\n  },\n}\n\nexport const FormExample: Story = {\n  render: (args) => {\n    const form = useForm()\n\n    return (\n      <Form {...form}>\n        <form style={{ width: \"66.7%\" }}>\n          <FormField\n            control={form.control}\n            name=\"pin\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>One-Time Password</FormLabel>\n                <FormControl>\n                  <InputOTP {...args} maxLength={6} {...field}>\n                    <InputOTPGroup>\n                      <InputOTPSlot index={0} />\n                      <InputOTPSlot index={1} />\n                      <InputOTPSlot index={2} />\n                      <InputOTPSlot index={3} />\n                      <InputOTPSlot index={4} />\n                      <InputOTPSlot index={5} />\n                    </InputOTPGroup>\n                  </InputOTP>\n                </FormControl>\n                <FormDescription>\n                  Please enter the one-time password sent to your phone.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <Button type=\"submit\" className=\"margin-top-m\">\n            Submit\n          </Button>\n        </form>\n      </Form>\n    )\n  },\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n} from \"./input-otp\"\n"
    }
  ],
  "type": "components:ui"
}