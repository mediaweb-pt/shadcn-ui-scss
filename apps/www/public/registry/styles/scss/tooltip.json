{
  "name": "tooltip",
  "dependencies": [
    "@radix-ui/react-tooltip"
  ],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./tooltip.scss\"\nimport { TooltipProps } from \"./tooltip.types\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  TooltipProps & React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\"tooltip__content\", className)}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"
    },
    {
      "name": "tooltip.scss",
      "content": ".tooltip {\n  --anim-enter-scale: 0.95;\n  --anim-enter-opacity: 0;\n  --anim-enter-translate-y: 0.5rem;\n\n  &__content {\n    background-color: hsl(var(--primary));\n    border-color: hsl(var(--border));\n    border-radius: calc(var(--radius) - 2px);\n    color: hsl(var(--primary-foreground));\n    font-size: var(--font-size-s);\n    padding: var(--space-xs) var(--space-s);\n    z-index: 50;\n  }\n\n  &__arrow {\n    fill: hsl(var(--primary));\n  }\n}\n\n.animate-in {\n  animation-duration: 0.15s;\n  animation-name: enter;\n  --enter-opacity: initial;\n  --enter-scale: initial;\n  --enter-rotate: initial;\n  --enter-translate-x: initial;\n  --enter-translate-y: initial;\n}\n"
    },
    {
      "name": "tooltip.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \".\"\nimport { Button } from \"../button\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/tooltip\n * # or\n * $ npm install @shadcn-ui-sass/tooltip\n * ```\n *\n */\n\nconst meta: Meta<typeof Tooltip> = {\n  title: \"Components/Tooltip\",\n  component: Tooltip,\n  tags: [\"autodocs\"],\n  args: {\n    side: \"top\",\n  },\n  argTypes: {\n    side: {\n      options: [\"top\", \"right\", \"bottom\", \"left\"],\n      control: { type: \"select\" },\n    },\n  },\n}\n\ntype Story = StoryObj<typeof Tooltip>\n\nconst template = (args: any) => (\n  <TooltipProvider>\n    <Tooltip>\n      <TooltipTrigger asChild>\n        <Button>Open Tooltip</Button>\n      </TooltipTrigger>\n      <TooltipContent side={args.side}>Tooltip</TooltipContent>\n    </Tooltip>\n  </TooltipProvider>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "tooltip.types.ts",
      "content": "export interface TooltipProps extends React.HTMLAttributes<HTMLDivElement> {\n  hasArrow?: boolean\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\"\n}\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipProvider,\n} from \"./tooltip\"\n\nexport type { TooltipProps } from \"./tooltip.types\"\n"
    }
  ],
  "type": "components:ui"
}