{
  "name": "scroll-area",
  "dependencies": [
    "@radix-ui/react-scroll-area"
  ],
  "files": [
    {
      "name": "scroll-area.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./scroll-area.scss\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"scroll-area\", className)}\n    style={...props.style}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"scroll-area__viewport\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"scroll-area__scrollbar\",\n      orientation === \"vertical\" && \"scroll-area__scrollbar--vertical\",\n      orientation === \"horizontal\" && \"scroll-area__scrollbar--horizontal\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"scroll-area__scrollbar-thumb\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"
    },
    {
      "name": "scroll-area.scss",
      "content": ".scroll-area {\n  height: var(--_scroll-area-height);\n  overflow: hidden;\n  position: relative;\n  width: var(--_scroll-area-width);\n\n  &__viewport {\n    border-radius: inherit;\n    height: 100%;\n    width: 100%;\n  }\n\n  &__scrollbar {\n    display: flex;\n    touch-action: none;\n    transition: 0.3s ease;\n    user-select: none;\n    &--horizontal {\n      border-top: var(--border-size-s) solid transparent;\n      flex-direction: column;\n      height: 10px;\n      padding: 1px;\n    }\n\n    &--vertical {\n      border-left: var(--border-size-s) solid transparent;\n      flex-direction: column;\n      height: 10px;\n      padding: 1px;\n    }\n\n    &-thumb {\n      background-color: hsl(var(--border));\n      border-radius: var(--border-radius-rounded);\n      flex: 1;\n      position: relative;\n    }\n  }\n}\n"
    },
    {
      "name": "scroll-area.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport { ScrollArea, ScrollBar } from \".\"\nimport { Separator } from \"../separator\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/scroll-area\n * # or\n * $ npm install @shadcn-ui-sass/scroll-area\n * ```\n *\n */\n\nconst meta: Meta<typeof ScrollArea> = {\n  title: \"Components/Scroll Area\",\n  component: ScrollArea,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof ScrollArea>\n\n/*  ------- SAMPLE DATA ---------  */\nconst tags = Array.from({ length: 50 }).map(\n  (_, i, a) => `v1.2.0-beta.${a.length - i}`\n)\n\nexport interface Artwork {\n  artist: string\n  art: string\n}\n\nconst works: Artwork[] = [\n  {\n    artist: \"Ornella Binni\",\n    art: \"https://images.unsplash.com/photo-1465869185982-5a1a7522cbcb?auto=format&fit=crop&w=300&q=80\",\n  },\n  {\n    artist: \"Tom Byrom\",\n    art: \"https://images.unsplash.com/photo-1548516173-3cabfa4607e9?auto=format&fit=crop&w=300&q=80\",\n  },\n  {\n    artist: \"Vladimir Malyavko\",\n    art: \"https://images.unsplash.com/photo-1494337480532-3725c85fd2ab?auto=format&fit=crop&w=300&q=80\",\n  },\n]\n\n/*  -----------------------------  */\n\nexport const Default: Story = {\n  render: (args) => (\n    <ScrollArea className=\"border-size-s border-radius-soft\" {...args}>\n      <div className=\"padding-base\">\n        <h4 className=\"margin-bottom-base font-size-s font-semi-bold\">Tags</h4>\n        {tags.map((tag) => (\n          <div key={tag}>\n            <div className=\"font-size-s\">{tag}</div>\n            <Separator className=\"margin-y-s\" />\n          </div>\n        ))}\n      </div>\n    </ScrollArea>\n  ),\n}\n\nexport const Horizontal: Story = {\n  render: (args) => (\n    <ScrollArea\n      className=\"white-space-nowrap border-size-s border-radius-soft\"\n      style={\n        {\n          \"--_scroll-area-width\": \"384px\",\n          \"--_scroll-area-height\": \"485px\",\n        } as React.CSSProperties\n      }\n      {...args}\n    >\n      <div className=\"display-flex gap-base padding-base\">\n        {works.map((artwork) => (\n          <figure key={artwork.artist} className=\"flex-shrink-0\">\n            <div className=\"overflow-hidden border-radius-soft\">\n              <img\n                src={artwork.art}\n                alt={`Photo by ${artwork.artist}`}\n                className=\"aspect-ratio-3-4 h-fit w-fit object-cover\"\n                width={300}\n                height={400}\n              />\n            </div>\n            <figcaption className=\"padding-top-s font-size-xs text-neutral-7\">\n              Photo by{\" \"}\n              <span className=\"font-bold text-neutral-10\">\n                {artwork.artist}\n              </span>\n            </figcaption>\n          </figure>\n        ))}\n      </div>\n      <ScrollBar orientation=\"horizontal\" />\n    </ScrollArea>\n  ),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export { ScrollArea, ScrollBar } from \"./scroll-area\"\n"
    }
  ],
  "type": "components:ui"
}