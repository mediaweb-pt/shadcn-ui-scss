{
  "name": "navigation-menu",
  "dependencies": [
    "@radix-ui/react-navigation-menu"
  ],
  "files": [
    {
      "name": "navigation-menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./navigation-menu.scss\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\"navigation-menu\", className)}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\"navigation-menu-list\", className)}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\"navigation-menu-trigger\")\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown className=\"navigation-menu-icon\" aria-hidden=\"true\" />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\"navigation-menu-content\", className)}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"navigation-menu-viewportWrapper\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\"navigation-menu-viewport\", className)}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuViewport,\n}\n"
    },
    {
      "name": "navigation-menu.scss",
      "content": ".navigation-menu {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  max-width: max-content;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n\n  &-list {\n    display: flex;\n    flex: 1;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n    gap: var(--space-xs);\n  }\n\n  &-trigger {\n    display: inline-flex;\n    height: 2.5rem;\n    width: max-content;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--border-radius-soft);\n    background-color: hsl(var(--background));\n    padding: var(--space-s) var(--space-base);\n    font-size: var(--font-size-s);\n    font-weight: var(--font-medium);\n    transition-property: color, background-color, border-color,\n      text-decoration-color, fill, stroke;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.15s;\n\n    &:hover {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n      outline: 2px solid transparent;\n      outline-offset: 2px;\n    }\n\n    &:disabled {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    &[data-active] {\n      background-color: hsl(var(--accent) / 0.5);\n    }\n\n    &[data-state=\"open\"] {\n      background-color: hsl(var(--accent) / 0.5);\n\n      .navigation-menu-icon {\n        --rotate: 180deg;\n        transform: translate(var(--translate-x), var(--translate-y))\n          rotate(var(--rotate)) skewX(var(--skew-x)) skewY(var(--skew-y))\n          scaleX(var(--scale-x)) scaleY(var(--scale-y));\n      }\n    }\n  }\n\n  &-icon {\n    position: relative;\n    top: 1px;\n    margin-left: var(--space-xs);\n    height: var(--font-size-xs);\n    width: var(--font-size-xs);\n    transition-property: color, background-color, border-color,\n      text-decoration-color, fill, stroke, opacity, box-shadow, transform,\n      filter, backdrop-filter, -webkit-backdrop-filter;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.2s;\n    animation-duration: 0.2s;\n  }\n\n  &-content {\n    left: 0;\n    top: 0;\n    width: 100%;\n\n    @media (min-width: 768px) {\n      position: absolute;\n      width: auto;\n    }\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"from-\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-motion=\"from-end\"] {\n      --enter-translate-x: 13rem;\n    }\n\n    &[data-motion=\"from-start\"] {\n      --enter-translate-x: -13rem;\n    }\n\n    &[data-motion=\"to-end\"] {\n      --exit-translate-x: 13rem;\n    }\n\n    &[data-motion=\"to-start\"] {\n      --exit-translate-x: -13rem;\n    }\n  }\n\n  &-viewportWrapper {\n    position: absolute;\n    left: 0;\n    top: 100%;\n    display: flex;\n    justify-content: center;\n  }\n\n  &-viewport {\n    position: relative;\n    margin-top: var(--space-xs);\n    height: var(--radix-navigation-menu-viewport-height);\n    width: 100%;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-l);\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.9;\n    }\n\n    @media (min-width: 768px) {\n      width: var(--radix-navigation-menu-viewport-width);\n    }\n  }\n\n  &-link {\n    display: block;\n    user-select: none;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-s);\n    line-height: 1;\n    text-decoration-line: none;\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n    transition-property: color, background-color, border-color,\n      text-decoration-color, fill, stroke;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.15s;\n\n    &:hover,\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n  }\n}\n"
    },
    {
      "name": "navigation-menu.stories.tsx",
      "content": "import { ComponentPropsWithoutRef, ElementRef, forwardRef } from \"react\"\nimport type { Meta, StoryObj } from \"@storybook/react\"\nimport { Home } from \"lucide-react\"\n\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \".\"\nimport { cn } from \"../../utils/utils\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/navigation-menu\n * # or\n * $ npm install @shadcn-ui-sass/navigation-menu\n * ```\n *\n */\n\nconst meta: Meta<typeof NavigationMenu> = {\n  title: \"Components/NavigationMenu\",\n  component: NavigationMenu,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof NavigationMenu>\n\nconst components: { title: string; href: string; description: string }[] = [\n  {\n    title: \"Alert Dialog\",\n    href: \"/docs/primitives/alert-dialog\",\n    description:\n      \"A modal dialog that interrupts the user with important content and expects a response.\",\n  },\n  {\n    title: \"Hover Card\",\n    href: \"/docs/primitives/hover-card\",\n    description:\n      \"For sighted users to preview content available behind a link.\",\n  },\n  {\n    title: \"Progress\",\n    href: \"/docs/primitives/progress\",\n    description:\n      \"Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\",\n  },\n  {\n    title: \"Scroll-area\",\n    href: \"/docs/primitives/scroll-area\",\n    description: \"Visually or semantically separates content.\",\n  },\n  {\n    title: \"Tabs\",\n    href: \"/docs/primitives/tabs\",\n    description:\n      \"A set of layered sections of content—known as tab panels—that are displayed one at a time.\",\n  },\n  {\n    title: \"Tooltip\",\n    href: \"/docs/primitives/tooltip\",\n    description:\n      \"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.\",\n  },\n]\nconst ListItem = forwardRef<ElementRef<\"a\">, ComponentPropsWithoutRef<\"a\">>(\n  ({ className, title, children, ...props }, ref) => {\n    return (\n      <li>\n        <NavigationMenuLink asChild>\n          <a\n            ref={ref}\n            className={cn(\"navigation-menu-link\", className)}\n            {...props}\n          >\n            <div className=\"font-size-s font-medium\" style={{ lineHeight: 1 }}>\n              {title}\n            </div>\n            <p\n              className=\"margin-top-xs font-size-s text-neutral-7\"\n              style={{ WebkitLineClamp: 2, lineHeight: 1.375 }}\n            >\n              {children}\n            </p>\n          </a>\n        </NavigationMenuLink>\n      </li>\n    )\n  }\n)\nconst template = (args: any) => (\n  <NavigationMenu {...args}>\n    <NavigationMenuList>\n      <NavigationMenuItem>\n        <NavigationMenuTrigger>Getting started</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul\n            className=\"display-grid gap-s padding-m\"\n            style={{ width: 400, gridTemplateColumns: \".75fr 1fr\" }}\n          >\n            <li style={{ gridRow: \"span 3 / span 3\" }}>\n              <NavigationMenuLink asChild>\n                <a\n                  className=\"display-flex full-height full-width flex-direction-column justify-content-flex-end border-radius-soft padding-m\"\n                  href=\"/\"\n                  style={{\n                    userSelect: \"none\",\n                    backgroundImage:\n                      \"linear-gradient(to bottom, hsl(var(--muted)/0.5), hsl(var(--muted)))\",\n                    textDecorationLine: \"none\",\n                    outline: \"2px solid transparent\",\n                    outlineOffset: 2,\n                  }}\n                >\n                  <Home />\n                  <div className=\"margin-bottom-s margin-top-base font-size-l font-medium\">\n                    shadcn/ui\n                  </div>\n                  <p className=\"font-size-s text-neutral-7\">\n                    Beautifully designed components that you can copy and paste\n                    into your apps. Accessible. Customizable. Open Source.\n                  </p>\n                </a>\n              </NavigationMenuLink>\n            </li>\n            <ListItem href=\"/docs\" title=\"Introduction\">\n              Re-usable components built using Radix UI and Tailwind CSS.\n            </ListItem>\n            <ListItem href=\"/docs/installation\" title=\"Installation\">\n              How to install dependencies and structure your app.\n            </ListItem>\n            <ListItem href=\"/docs/primitives/typography\" title=\"Typography\">\n              Styles for headings, paragraphs, lists...etc\n            </ListItem>\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n      <NavigationMenuItem>\n        <NavigationMenuTrigger>Components</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul\n            className=\"display-grid gap-s padding-base\"\n            style={{\n              width: 400,\n              gridTemplateColumns: \"repeat(2, minmax(0, 1fr))\",\n            }}\n          >\n            {components.map((component) => (\n              <ListItem\n                key={component.title}\n                title={component.title}\n                href={component.href}\n              >\n                {component.description}\n              </ListItem>\n            ))}\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n      <NavigationMenuItem>\n        <a href=\"/docs\">\n          <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n            Documentation\n          </NavigationMenuLink>\n        </a>\n      </NavigationMenuItem>\n    </NavigationMenuList>\n  </NavigationMenu>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuViewport,\n} from \"./navigation-menu\"\n"
    }
  ],
  "type": "components:ui"
}