{
  "name": "context-menu",
  "dependencies": [
    "@radix-ui/react-context-menu"
  ],
  "files": [
    {
      "name": "context-menu.tsx",
      "content": "import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport \"./context-menu.scss\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"context-menu-subTrigger\",\n      inset && \"padding-left-l\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"margin-left-auto\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\"context-menu-subContent\", className)}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\"context-menu-content\", className)}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\"context-menu-item\", inset && \"padding-left-l\", className)}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\"context-menu-checkbox-item\", className)}\n    checked={checked}\n    {...props}\n  >\n    <span>\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\"context-menu-radio-item\", className)}\n    {...props}\n  >\n    <span>\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\"context-menu-label\", inset && \"padding-left-l\", className)}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"context-menu-separator\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return <span className={cn(\"context-menu-shortcut\", className)} {...props} />\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n"
    },
    {
      "name": "context-menu.scss",
      "content": ".context-menu {\n  &-subTrigger {\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-s);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-state=\"open\"] {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    svg {\n      height: var(--font-size-base);\n      width: var(--font-size-base);\n    }\n  }\n\n  &-subContent {\n    z-index: 50;\n    min-width: 8rem;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-xs);\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-m);\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n  }\n\n  &-content {\n    --enter-opacity: 0.8;\n    z-index: 50;\n    min-width: 8rem;\n    overflow: hidden;\n    border-radius: var(--border-radius-soft);\n    border: var(--border-size-s) solid hsl(var(--border));\n    background-color: hsl(var(--popover));\n    padding: var(--space-xs);\n    color: hsl(var(--popover-foreground));\n    box-shadow: var(--shadow-m);\n    animation-name: enter;\n    animation-duration: 0.15s;\n    --enter-opacity: initial;\n    --enter-scale: initial;\n    --enter-rotate: initial;\n    --enter-translate-x: initial;\n    --enter-translate-y: initial;\n\n    &[data-motion^=\"from-\"],\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      animation-name: enter;\n      animation-duration: 0.15s;\n      --enter-opacity: initial;\n      --enter-scale: initial;\n      --enter-rotate: initial;\n      --enter-translate-x: initial;\n      --enter-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"],\n    &[data-state=\"hidden\"],\n    &[data-swipe=\"end\"] {\n      animation-name: exit;\n      animation-duration: 0.15s;\n      --exit-opacity: initial;\n      --exit-scale: initial;\n      --exit-rotate: initial;\n      --exit-translate-x: initial;\n      --exit-translate-y: initial;\n    }\n\n    &[data-motion^=\"to-\"],\n    &[data-state=\"closed\"] {\n      --exit-opacity: 0;\n    }\n\n    &[data-state=\"open\"],\n    &[data-state=\"visible\"] {\n      --enter-opacity: 0;\n    }\n\n    &[data-state=\"closed\"] {\n      --exit-scale: 0.95;\n    }\n\n    &[data-state=\"open\"] {\n      --enter-scale: 0.95;\n    }\n\n    &[data-side=\"bottom\"] {\n      --enter-translate-y: -0.5rem;\n    }\n\n    &[data-side=\"left\"] {\n      --enter-translate-x: 0.5rem;\n    }\n\n    &[data-side=\"right\"] {\n      --enter-translate-x: -0.5rem;\n    }\n\n    &[data-side=\"top\"] {\n      --enter-translate-y: 0.5rem;\n    }\n  }\n\n  &-item {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-s);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n  }\n\n  &-checkbox-item {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s) var(--space-xs) var(--space-l);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    > span:first-child {\n      position: absolute;\n      left: var(--space-s);\n      display: flex;\n      height: 0.875rem;\n      width: 0.875rem;\n      align-items: center;\n      justify-content: center;\n\n      svg {\n        height: var(--font-size-base);\n        width: var(--font-size-base);\n      }\n    }\n  }\n\n  &-radio-item {\n    position: relative;\n    display: flex;\n    cursor: default;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--border-radius-soft);\n    padding: var(--space-xs) var(--space-s) var(--space-xs) var(--space-l);\n    font-size: var(--font-size-s);\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n\n    &:focus {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &[data-disabled] {\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    > span {\n      position: absolute;\n      left: var(--space-s);\n      display: flex;\n      height: 0.875rem;\n      width: 0.875rem;\n      align-items: center;\n      justify-content: center;\n\n      svg {\n        height: var(--font-size-xxs);\n        width: var(--font-size-xxs);\n        fill: currentColor;\n      }\n    }\n  }\n\n  &-label {\n    padding: var(--space-xs) var(--space-s);\n    font-size: var(--font-size-s);\n    font-weight: var(--font-semi-bold);\n    color: hsl(var(--foreground));\n  }\n\n  &-separator {\n    margin: var(--space-xs) calc(var(--space-xs) * -1);\n    height: 1px;\n    background-color: hsl(var(--border));\n  }\n\n  &-shortcut {\n    margin-left: auto;\n    font-size: var(--font-size-xs);\n    letter-spacing: 0.1em;\n    color: hsl(var(--muted-foreground));\n  }\n}\n"
    },
    {
      "name": "context-menu.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport {\n  ContextMenu,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuLabel,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n} from \".\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/context-menu\n * # or\n * $ npm install @shadcn-ui-sass/context-menu\n * ```\n *\n */\n\nconst meta: Meta<typeof ContextMenu> = {\n  title: \"Components/ContextMenu\",\n  component: ContextMenu,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof ContextMenu>\n\nconst template = (args: any) => (\n  <ContextMenu {...args}>\n    <ContextMenuTrigger\n      className=\"display-flex align-items-center justify-content-center border-radius-soft font-size-s\"\n      style={{\n        height: 150,\n        width: 300,\n        border: \"var(--border-size-s) dashed hsl(var(--border))\",\n      }}\n    >\n      Right click here\n    </ContextMenuTrigger>\n    <ContextMenuContent style={{ width: \"16rem\" }}>\n      <ContextMenuItem inset>\n        Back\n        <ContextMenuShortcut>⌘[</ContextMenuShortcut>\n      </ContextMenuItem>\n      <ContextMenuItem inset disabled>\n        Forward\n        <ContextMenuShortcut>⌘]</ContextMenuShortcut>\n      </ContextMenuItem>\n      <ContextMenuItem inset>\n        Reload\n        <ContextMenuShortcut>⌘R</ContextMenuShortcut>\n      </ContextMenuItem>\n      <ContextMenuSub>\n        <ContextMenuSubTrigger inset>More Tools</ContextMenuSubTrigger>\n        <ContextMenuSubContent style={{ width: \"12rem\" }}>\n          <ContextMenuItem>\n            Save Page As...\n            <ContextMenuShortcut>⇧⌘S</ContextMenuShortcut>\n          </ContextMenuItem>\n          <ContextMenuItem>Create Shortcut...</ContextMenuItem>\n          <ContextMenuItem>Name Window...</ContextMenuItem>\n          <ContextMenuSeparator />\n          <ContextMenuItem>Developer Tools</ContextMenuItem>\n        </ContextMenuSubContent>\n      </ContextMenuSub>\n      <ContextMenuSeparator />\n      <ContextMenuCheckboxItem checked>\n        Show Bookmarks Bar\n        <ContextMenuShortcut>⌘⇧B</ContextMenuShortcut>\n      </ContextMenuCheckboxItem>\n      <ContextMenuCheckboxItem>Show Full URLs</ContextMenuCheckboxItem>\n      <ContextMenuSeparator />\n      <ContextMenuRadioGroup value=\"pedro\">\n        <ContextMenuLabel inset>People</ContextMenuLabel>\n        <ContextMenuSeparator />\n        <ContextMenuRadioItem value=\"pedro\">Pedro Duarte</ContextMenuRadioItem>\n        <ContextMenuRadioItem value=\"colm\">Colm Tuite</ContextMenuRadioItem>\n      </ContextMenuRadioGroup>\n    </ContextMenuContent>\n  </ContextMenu>\n)\n\nexport const Default: Story = {\n  render: (args) => template(args),\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n} from \"./context-menu\"\n"
    }
  ],
  "type": "components:ui"
}