{
  "name": "calendar",
  "dependencies": [
    "react-day-picker",
    "date-fns"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "calendar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { buttonVariants } from \"../button\"\nimport \"./calendar.scss\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"calendar\", className)}\n      classNames={{\n        months: \"calendar-months\",\n        month: \"calendar-month\",\n        caption: \"calendar-caption\",\n        caption_label: \"calendar-caption-label\",\n        nav: \"calendar-nav\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\", size: \"icon\" }),\n          \"calendar-nav-button\"\n        ),\n        nav_button_previous: \"calendar-nav-button-prev\",\n        nav_button_next: \"calendar-nav-button-next\",\n        table: \"calendar-table\",\n        head_row: \"calendar-table-header-row\",\n        head_cell: \"calendar-table-header-cell\",\n        row: \"calendar-row\",\n        cell: \"calendar-cell\",\n        day: cn(buttonVariants({ variant: \"ghost\" }), \"calendar-day\"),\n        day_range_end: \"day-range-end\",\n        day_selected: \"calendar-day-selected\",\n        day_today: \"calendar-day-today\",\n        day_outside: \"day-outside calendar-day-outside\",\n        day_disabled: \"calendar-day-disabled\",\n        day_range_middle: \"calendar-day-range-middle\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: () => <ChevronLeft />,\n        IconRight: () => <ChevronRight />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"
    },
    {
      "name": "calendar.scss",
      "content": ".calendar {\n  padding: var(--space-base);\n  border: var(--border-size-s) solid hsl(var(--border));\n  border-radius: var(--border-radius-soft);\n\n  &-months {\n    display: flex;\n    flex-direction: column;\n    gap: var(--space-base);\n\n    @media (min-width: 640px) {\n      flex-direction: row;\n      gap: var(--space-none);\n    }\n  }\n\n  &-caption {\n    display: flex;\n    justify-content: center;\n    padding-top: var(--space-xs);\n    position: relative;\n    align-items: center;\n\n    &-label {\n      font-size: var(--font-size-s);\n      font-weight: var(--font-medium);\n    }\n  }\n\n  &-nav {\n    gap: var(--space-xs);\n    display: flex;\n    align-items: center;\n\n    &-button {\n      width: 1.75rem;\n      height: 1.75rem;\n      background-color: transparent;\n      opacity: 0.5;\n\n      &:hover {\n        opacity: 1;\n      }\n\n      &-prev {\n        position: absolute;\n        left: var(--space-xs);\n      }\n\n      &-next {\n        position: absolute;\n        right: var(--space-xs);\n      }\n    }\n  }\n\n  &-table {\n    margin-top: var(--space-base);\n    width: 100%;\n    border-collapse: collapse;\n\n    &-header-row {\n      display: flex;\n    }\n\n    &-header-cell {\n      width: 2.25rem;\n      border-radius: var(--border-radius-soft);\n      font-size: var(--font-size-xs);\n      font-weight: var(--font-regular);\n      color: hsl(var(--muted-foreground));\n    }\n  }\n\n  &-row {\n    display: flex;\n    width: 100%;\n    margin-top: var(--space-s);\n  }\n\n  &-cell {\n    width: 2.25rem;\n    height: 2.25rem;\n    text-align: center;\n    font-size: var(--font-size-s);\n    padding: var(--space-none);\n    position: relative;\n\n    &:first-child {\n      .btn[aria-selected] {\n        border-top-left-radius: var(--border-radius-soft);\n        border-bottom-left-radius: var(--border-radius-soft);\n      }\n    }\n\n    &:last-child {\n      .btn[aria-selected] {\n        border-top-right-radius: var(--border-radius-soft);\n        border-bottom-right-radius: var(--border-radius-soft);\n      }\n    }\n\n    &:has([aria-selected]) {\n      background-color: hsl(var(--accent));\n\n      .day-range-end {\n        border-top-right-radius: var(--border-radius-soft);\n        border-bottom-right-radius: var(--border-radius-soft);\n      }\n\n      .day-outside {\n        background-color: hsl(var(--accent) / 0.5);\n      }\n    }\n\n    &:focus-within {\n      position: relative;\n      z-index: 20;\n    }\n  }\n\n  &-day {\n    width: 2.25rem;\n    height: 2.25rem;\n    padding: var(--space-none);\n    font-weight: var(--font-regular);\n\n    &[aria-selected] {\n      opacity: 1;\n    }\n\n    &-selected {\n      background-color: hsl(var(--primary));\n      color: hsl(var(--primary-foreground));\n\n      &:hover {\n        background-color: hsl(var(--primary));\n        color: hsl(var(--primary-foreground));\n      }\n\n      &:focus {\n        background-color: hsl(var(--primary));\n        color: hsl(var(--primary-foreground));\n      }\n    }\n\n    &-today {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n\n    &-outside {\n      color: hsl(var(--mutted-foreground));\n      opacity: 0.5;\n\n      &[aria-selected] {\n        background-color: hsl(var(--accent) / 0.5);\n        color: hsl(var(--muted-foreground));\n        opacity: 0.3;\n      }\n    }\n\n    &-disabled {\n      color: hsl(var(--muted-foreground));\n      opacity: 0.5;\n    }\n\n    &-range-middle[aria-selected] {\n      background-color: hsl(var(--accent));\n      color: hsl(var(--accent-foreground));\n    }\n  }\n}\n"
    },
    {
      "name": "calendar.stories.tsx",
      "content": "import { useState } from \"react\"\nimport type { Meta, StoryObj } from \"@storybook/react\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\n\nimport { Calendar } from \".\"\nimport { cn } from \"../../utils/utils\"\nimport { Button } from \"../button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"../form\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"../popover\"\n\n/**\n * ## Installation\n *\n * ```sh\n * $ yarn add @shadcn-ui-sass/Calendar\n * # or\n * $ npm install @shadcn-ui-sass/Calendar\n * ```\n *\n */\n\nconst meta: Meta<typeof Calendar> = {\n  title: \"Components/Calendar\",\n  component: Calendar,\n  tags: [\"autodocs\"],\n}\n\ntype Story = StoryObj<typeof Calendar>\n\nconst template = (args: any) => {\n  const [date, setDate] = useState<Date | undefined>(new Date())\n\n  return <Calendar {...args} mode=\"single\" selected={date} onSelect={setDate} />\n}\n\nexport const Default: Story = {\n  render: (args) => <div className=\"display-flex\">{template(args)}</div>,\n}\n\nexport const FormExample: Story = {\n  render: (args) => {\n    const form = useForm()\n\n    return (\n      <Form {...form}>\n        <form>\n          <FormField\n            control={form.control}\n            name=\"dob\"\n            render={({ field }) => (\n              <FormItem className=\"display-flex flex-direction-column\">\n                <FormLabel>Date of birth</FormLabel>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <FormControl>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          \"padding-left-base text-align-left font-regular\",\n                          !field.value && \"text-neutral-7\"\n                        )}\n                        style={{ width: 240 }}\n                      >\n                        {field.value ? (\n                          format(field.value, \"PPP\")\n                        ) : (\n                          <span>Pick a date</span>\n                        )}\n                        <CalendarIcon className=\"margin-left-auto\" />\n                      </Button>\n                    </FormControl>\n                  </PopoverTrigger>\n                  <PopoverContent\n                    className=\"padding-none\"\n                    align=\"start\"\n                    style={{ width: \"auto\" }}\n                  >\n                    <Calendar\n                      {...args}\n                      mode=\"single\"\n                      selected={field.value}\n                      onSelect={field.onChange}\n                      disabled={(date) =>\n                        date > new Date() || date < new Date(\"1900-01-01\")\n                      }\n                      initialFocus\n                    />\n                  </PopoverContent>\n                </Popover>\n                <FormDescription>\n                  Your date of birth is used to calculate your age.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <Button type=\"submit\" className=\"margin-top-l\">\n            Submit\n          </Button>\n        </form>\n      </Form>\n    )\n  },\n}\n\nexport default meta\n"
    },
    {
      "name": "index.ts",
      "content": "export { Calendar } from \"./calendar\"\n\nexport type { CalendarProps } from \"./calendar\"\n"
    }
  ],
  "type": "components:ui"
}